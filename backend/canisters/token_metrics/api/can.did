type GetHoldersArgs = record {
  offset : nat64;
  limit : nat64;
  merge_accounts_to_principals : bool;
};
type GovernanceStats = record {
  total_rewards : nat64;
  total_staked : nat64;
  total_locked : nat64;
  total_unlocked : nat64;
};
type InitArgs = record {
  ogy_legacy_minting_account_principal : principal;
  test_mode : bool;
  ogy_new_ledger_canister_id : principal;
  ogy_legacy_ledger_canister_id : principal;
};
type Overview = record {
  balance : nat;
  sent : record { nat32; nat };
  last_active : nat64;
  first_active : nat64;
  received : record { nat32; nat };
};
type TokenSupplyData = record {
  circulating_supply : nat64;
  total_supply : nat64;
};
type WalletOverview = record {
  total : nat64;
  ledger : Overview;
  governance : GovernanceStats;
};
service : (InitArgs) -> {
  get_all_neuron_owners : () -> (vec principal) query;
  get_holders : (GetHoldersArgs) -> (vec record { text; WalletOverview }) query;
  get_neurons_stats : (opt principal) -> (GovernanceStats) query;
  get_supply_data : () -> (TokenSupplyData) query;
  run_gov_job : () -> (text);
}
